{"version":3,"sources":["_services/SPServices.ts"],"names":[],"mappings":"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","file":"_services/SPServices.js","sourcesContent":["import { WebPartContext } from \"@microsoft/sp-webpart-base\";\r\nimport {\r\n  SPHttpClientResponse,\r\n  SPHttpClient,\r\n  ISPHttpClientOptions,\r\n} from \"@microsoft/sp-http\";\r\nimport { CanvasA11yManager } from \"@microsoft/sp-webpart-base/lib/utils/CanvasA11y\";\r\n// import reject = Promise.reject;\r\nconst getHeader = {\r\n  headers: {\r\n    accept: \"application/json;\",\r\n  },\r\n};\r\nconst postHeader = {\r\n  headers: {\r\n    \"content-type\": \"application/json;odata.metadata=full\",\r\n    accept: \"application/json;odata.metadata=full\",\r\n  },\r\n};\r\nconst deleteHeader = {\r\n  headers: {\r\n    \"content-type\": \"application/json;odata.metadata=full\",\r\n    \"IF-MATCH\": \"*\",\r\n    \"X-HTTP-Method\": \"DELETE\",\r\n  },\r\n};\r\nconst updateHeader = {\r\n  headers: {\r\n    \"content-type\": \"application/json;odata.metadata=full\",\r\n    accept: \"application/json;odata.metadata=full\",\r\n    \"X-HTTP-Method\": \"MERGE\",\r\n    \"IF-MATCH\": \"*\",\r\n  },\r\n};\r\n\r\nexport default class SPService {\r\n  constructor(private context: WebPartContext) {}\r\n  webUrl = this.context.pageContext.web.absoluteUrl;\r\n  serverUrl = this.context.pageContext.web.serverRelativeUrl;\r\n  siteUrl = this.context.pageContext.site.absoluteUrl;\r\n\r\n  loggedUserName = this.context.pageContext.user.displayName;\r\n  loggedUserEmail = this.context.pageContext.user.email;\r\n  loggedUserId = this.context.pageContext.legacyPageContext.userId;\r\n  adWebUrl = `${window.location.origin}:2023/ADExplorer`;\r\n\r\n  getListItems(listName: string) {\r\n    return this.context.spHttpClient\r\n      .get(\r\n        `${this.webUrl}/_api/web/lists/getbytitle('${listName}')/items?$top=15`,\r\n        SPHttpClient.configurations.v1\r\n      )\r\n      .then((response: SPHttpClientResponse) => response.json())\r\n      .then(\r\n        (data) => data,\r\n        (error) => error\r\n      );\r\n  }\r\n\r\n  changeDateFormat(date) {\r\n    const insertedDate = new Date(date);\r\n    let insertedDate2 =\r\n      this.getFormattedResult(insertedDate.getMonth() + 1) +\r\n      \"/\" +\r\n      this.getFormattedResult(insertedDate.getDate()) +\r\n      \"/\" +\r\n      this.getFormattedResult(insertedDate.getFullYear());\r\n    let returnedDate = insertedDate2.split(\"/\");\r\n    return returnedDate[2] + \"-\" + returnedDate[0] + \"-\" + returnedDate[1];\r\n  }\r\n\r\n  getByUrl(url) {\r\n    return this.get(url, false)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => err);\r\n  }\r\n\r\n  getAllItems(listName: string): Promise<any> {\r\n    const url: string =\r\n      this.webUrl + \"/_api/web/lists/getByTitle('\" + listName + \"')/items\";\r\n    return this.get(url).then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  getFormattedResult(num) {\r\n    if (num <= 9) {\r\n      return `0${num}`;\r\n    }\r\n    return num;\r\n  }\r\n\r\n  getItemById(listName: string, id) {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/lists/getByTitle('\" +\r\n      listName +\r\n      \"')/items?$select=*,EncodedAbsUrl,FileLeafRef&$filter=Id eq \" +\r\n      id;\r\n    // return this.get(url, false)\r\n    return this.getServiceUrl(url)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => err);\r\n  }\r\n\r\n  getFilteredItems(listName: string, query): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/lists/getByTitle('\" +\r\n      listName +\r\n      \"')/items\" +\r\n      query;\r\n\r\n    return this.get(url, false)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  getFieldsChoices(listName: string, fieldName: string): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/lists/getByTitle('\" +\r\n      listName +\r\n      \"')/fields/getByTitle('\" +\r\n      fieldName +\r\n      \"')/Choices\";\r\n\r\n    return this.get(url, false)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  editAndGet(listName: string, id, inputs): Promise<any> {\r\n    return this.updateItem(listName, inputs, id).then((response) => {\r\n      return this.getItemById(listName, id).then((json) => {\r\n        return json;\r\n      }) as Promise<any>;\r\n    });\r\n  }\r\n\r\n  getAllFiles(serverRelativeUrl: string): Promise<any> {\r\n    const restUrl = `${this.webUrl}/_api/web/getFolderByServerRelativeUrl('${serverRelativeUrl}')/files`;\r\n    return this.get(restUrl, true).then((json) => {\r\n      return json;\r\n    });\r\n  }\r\n\r\n  getFilteredFiles(serverRelativeUrl: string, query: string): Promise<any> {\r\n    const restUrl = `${this.webUrl}/_api/web/getFolderByServerRelativeUrl('${serverRelativeUrl}')/files${query}`;\r\n\r\n    return this.get(restUrl, true).then((json) => {\r\n      return json;\r\n    });\r\n  }\r\n\r\n  getAllFolders(serverRelativeUrl: string): Promise<any> {\r\n    const restUrl = `${this.webUrl}/_api/web/getFolderByServerRelativeUrl('${serverRelativeUrl}')/folders`;\r\n    return this.get(restUrl, true).then((json) => {\r\n      return json;\r\n    });\r\n  }\r\n\r\n  getFilteredFolder(serverRelativeUrl: string, query: string): Promise<any> {\r\n    const restUrl = `${this.webUrl}/_api/web/getFolderByServerRelativeUrl('${serverRelativeUrl}')/folders${query}`;\r\n\r\n    return this.get(restUrl, true).then((json) => {\r\n      return json;\r\n    });\r\n  }\r\n\r\n  getLibraryInformationByName(libraryName: string): Promise<any> {\r\n    const restUrl = `${this.webUrl}/_api/web/folders?$filter=Name eq '${libraryName}'`;\r\n    return this.get(restUrl)\r\n      .then((json) => {\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  getInformationUsingServerRelativeUrl(serverRelativeUrl): Promise<any> {\r\n    const restUrl = `${this.webUrl}/_api/web/getFolderByServerRelativeUrl('${serverRelativeUrl}')`;\r\n    return this.get(restUrl)\r\n      .then((json) => {\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  getItemCount(listName: string) {\r\n    const restUrl = `${this.webUrl}/_api/web/lists/getByTitle('${listName}')/ItemCount`;\r\n    return this.get(restUrl)\r\n      .then((json) => {\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  getServiceUrl = async (url: string): Promise<any> => {\r\n    return this.context.spHttpClient\r\n      .get(url, SPHttpClient.configurations.v1, {\r\n        headers: getHeader.headers,\r\n      })\r\n      .then(async (response: any): Promise<any> => {\r\n        if (response.ok) {\r\n          let jsonResponse = await response.json();\r\n\r\n          let responseValue = {\r\n            hasError: false,\r\n            value: jsonResponse.value,\r\n          };\r\n          return responseValue;\r\n        } else {\r\n          let jsonResponse = await response.json();\r\n          let error = {\r\n            hasError: true,\r\n            error: await jsonResponse.error,\r\n          };\r\n          return Promise.reject(error);\r\n        }\r\n      })\r\n      .catch((error: any): void => {\r\n        //console.error(error ? error.message : \"\");\r\n        console.error(error);\r\n        return error;\r\n      });\r\n  };\r\n\r\n  get(url: string, check: Boolean = false): Promise<any> {\r\n    return this.context.spHttpClient\r\n      .get(url, SPHttpClient.configurations.v1, {\r\n        headers: getHeader.headers,\r\n      })\r\n      .then(async (response) => {\r\n        return response.json().then((json) => {\r\n          return json;\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  postItem(listName: string, data: any): Promise<any> {\r\n    const url: string =\r\n      this.webUrl + \"/_api/web/lists/getByTitle('\" + listName + \"')/items\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n      body: data,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  }\r\n\r\n  createList(listName: string, description: string = \"\") {\r\n    const url: string = this.webUrl + \"/_api/web/lists\";\r\n    const options: any = {\r\n      headers: postHeader.headers,\r\n      body: {\r\n        // '__metadata': { 'type': 'SP.List' },\r\n        BaseTemplate: 100, // 100 represents a custom list, you can change it as per your requirement\r\n        Title: listName,\r\n        Description: description,\r\n      },\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  }\r\n  createSiteField(fieldName: string, groupName: string) {\r\n    const url: string = this.webUrl + \"/_api/web/fields\";\r\n    const options: any = {\r\n      headers: postHeader.headers,\r\n      body: {\r\n        // '__metadata': { 'type': 'SP.Field' },\r\n        Title: fieldName,\r\n        FieldTypeKind: 2,\r\n        Group: groupName,\r\n      },\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  }\r\n\r\n  createFieldsForAList(listName: string, fieldsDefinition: any[]) {\r\n    Promise.all(\r\n      fieldsDefinition.map((fieldDefinition) => {\r\n        this.createFieldForAList(listName, fieldDefinition);\r\n      })\r\n    ).then(() => {\r\n      return;\r\n    });\r\n  }\r\n\r\n  createFieldForAList(listName: string, fieldDefinition: any) {\r\n    const url: string =\r\n      this.webUrl + `/_api/web/lists/getByTitle('${listName}')/fields`;\r\n    const options: any = {\r\n      headers: postHeader.headers,\r\n      body: fieldDefinition,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  }\r\n\r\n  postNotification(listName: string, data: any): Promise<any> {\r\n    const url: string =\r\n      `${window.location.origin}/sites/portal/` +\r\n      \"/_api/web/lists/getByTitle('\" +\r\n      listName +\r\n      \"')/items\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n      body: data,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  }\r\n\r\n  updateItem(listName: string, data: any, id, toJson = true): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/lists/getByTitle('\" +\r\n      listName +\r\n      \"')/items(\" +\r\n      id +\r\n      \")\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: updateHeader.headers,\r\n      body: data,\r\n    };\r\n    return this.post(url, options, toJson)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  }\r\n\r\n  updateFileMetaData(fileServerRelativeUrl, data) {\r\n    const url: string =\r\n      this.webUrl +\r\n      `/_api/web/getFileByServerRelativeUrl('${fileServerRelativeUrl}')/ListItemAllFields`;\r\n    const options: ISPHttpClientOptions = {\r\n      headers: updateHeader.headers,\r\n      body: data,\r\n    };\r\n    return this.post(url, options, true)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => err);\r\n  }\r\n\r\n  updateFolderMetaData(folderServerRelativeUrl, data) {\r\n    const url: string =\r\n      this.webUrl +\r\n      `/_api/web/getFolderByServerRelativeUrl('${folderServerRelativeUrl}')/ListItemAllFields`;\r\n    const options: ISPHttpClientOptions = {\r\n      headers: updateHeader.headers,\r\n      body: data,\r\n    };\r\n    return this.post(url, options, true)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => err);\r\n  }\r\n\r\n  postFile(listName, file): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/lists/getByTitle('\" +\r\n      listName +\r\n      \"')/RootFolder/files/add(url='\" +\r\n      file.name +\r\n      \"',overwrite=true)?$expand=ListItemAllFields\";\r\n\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n      body: file,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  // uploadFile(serverRelativeUrl, file): Promise<any> {\r\n  //     sp.web.getFolderByServerRelativeUrl( this.webUrl +\r\n  //       \"/_api/web/getFolderByServerRelativeUrl('\" +\r\n  //       serverRelativeUrl).files.add(file.name, file, true).then(f => {\r\n  //\r\n  //       f.file.getItem().then(item => {\r\n  //         item.update({\r\n  //           Title: \"Metadata Updated\"\r\n  //         }).then((result) => {\r\n  //\r\n  //\r\n  //\r\n  //             return result;\r\n  //\r\n  //         }) .catch((err) => {\r\n  //\r\n  //           Promise.reject(err);\r\n  //           return err;\r\n  //         });\r\n  //       }).catch((err) => {\r\n  //\r\n  //         Promise.reject(err);\r\n  //         return err;\r\n  //       });\r\n  //     }).catch((err) => {\r\n  //\r\n  //       Promise.reject(err);\r\n  //       return err;\r\n  //     });\r\n  //   }\r\n\r\n  postFileByServerRelativeUrl(serverRelativeUrl, file): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/getFolderByServerRelativeUrl('\" +\r\n      serverRelativeUrl +\r\n      \"')/files/add(url='\" +\r\n      file.name +\r\n      \"',overwrite=true)?$expand=ListItemAllFields\";\r\n\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n      body: file,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  createFile(listName, fileName): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/GetFolderByServerRelativeUrl('\" +\r\n      this.serverUrl +\r\n      \"/\" +\r\n      listName +\r\n      \"')/files/add(url='\" +\r\n      fileName +\r\n      \"',overwrite=true)?$expand=ListItemAllFields\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  createFileByServerRelativeUrl(\r\n    folderServerRelativeUrl,\r\n    fileName\r\n  ): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/GetFolderByServerRelativeUrl('\" +\r\n      folderServerRelativeUrl +\r\n      \"')/files/add(url='\" +\r\n      fileName +\r\n      \"',overwrite=true)?$expand=ListItemAllFields\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  createFolder(serverRelativeUrl: string, folderName: string): Promise<any> {\r\n    const url = `${this.webUrl}/_api/web/getFolderByServerRelativeUrl('${serverRelativeUrl}')/folders/add(url='${folderName}')`;\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  moveFile(listName, originalFileName, newFileName): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/getfilebyserverrelativeurl('\" +\r\n      this.serverUrl +\r\n      \"/\" +\r\n      listName +\r\n      \"/\" +\r\n      originalFileName +\r\n      \"')/moveto(newurl = '\" +\r\n      this.serverUrl +\r\n      \"/\" +\r\n      listName +\r\n      \"/\" +\r\n      newFileName +\r\n      \"', flags = 1)\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: updateHeader.headers,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => err);\r\n  }\r\n\r\n  moveFolder(listName, originalFileName, newFileName): Promise<any> {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/getfilebyserverrelativeurl('\" +\r\n      this.serverUrl +\r\n      \"/\" +\r\n      listName +\r\n      \"/\" +\r\n      originalFileName +\r\n      \"')/moveto(newurl = '\" +\r\n      this.serverUrl +\r\n      \"/\" +\r\n      listName +\r\n      \"/\" +\r\n      newFileName +\r\n      \"', flags = 1)\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: updateHeader.headers,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => err);\r\n  }\r\n\r\n  deleteItem(listName: string, id) {\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/web/lists/getByTitle('\" +\r\n      listName +\r\n      \"')/items(\" +\r\n      id +\r\n      \")\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: deleteHeader.headers,\r\n    };\r\n    return this.context.spHttpClient\r\n      .post(url, SPHttpClient.configurations.v1, options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  // async post(url: string, postInformation, check = false): Promise<any> {\r\n  //   if (check) {\r\n  //     return await this.dateConverter\r\n  //       .toEuropean(postInformation.body)\r\n  //       .then((response) => {\r\n  //         const options: ISPHttpClientOptions = {\r\n  //           headers: postInformation.headers,\r\n  //           body: JSON.stringify(response),\r\n  //         };\r\n  //         return this.context.spHttpClient\r\n  //           .post(url, SPHttpClient.configurations.v1, options)\r\n  //           .then((result) => {\r\n  //             return result.json().then((json) => {\r\n  //               return json;\r\n  //             });\r\n  //           })\r\n  //           .catch((err) => {\r\n  //\r\n  //             Promise.reject(err);\r\n  //           });\r\n  //       });\r\n  //   }\r\n\r\n  async post(url: string, postInformation, toJson = true): Promise<any> {\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postInformation.headers,\r\n      body: JSON.stringify(postInformation.body),\r\n    };\r\n    return this.context.spHttpClient\r\n      .post(url, SPHttpClient.configurations.v1, options)\r\n      .then(async (response: any): Promise<any> => {\r\n        if (toJson) {\r\n          if (response.ok) {\r\n            let jsonResponse = await response.json();\r\n\r\n            let responseValue = {\r\n              hasError: false,\r\n              value: jsonResponse,\r\n            };\r\n\r\n            return responseValue;\r\n          } else {\r\n            let jsonResponse = await response.json();\r\n            let error = {\r\n              hasError: true,\r\n              error: await jsonResponse.error,\r\n            };\r\n            return Promise.reject(error);\r\n          }\r\n        } else {\r\n          return response;\r\n        }\r\n      })\r\n      .catch((error: any): void => {\r\n        //console.error(error ? error.message : \"\");\r\n        console.error(error);\r\n        return error;\r\n      });\r\n  }\r\n  async isCurrentUserInGroup(groupName: string): Promise<any> {\r\n    var url =\r\n      this.context.pageContext.web.absoluteUrl +\r\n      \"/_api/Web/SiteGroups/GetByName('\" +\r\n      groupName +\r\n      \"')/Users?$filter=email eq '\" +\r\n      this.loggedUserEmail +\r\n      \"'\";\r\n    return await this.get(url).then((response: any) => {\r\n      let result = false;\r\n      if (response.length > 0) {\r\n        result = true;\r\n      } else {\r\n        result = false;\r\n      }\r\n      return result;\r\n    });\r\n  }\r\n  getListInformationByName(listName: string): Promise<any> {\r\n    const restUrl = `${this.webUrl}/_api/web/lists/getByTitle('${listName}')`;\r\n\r\n    return this.get(restUrl).then((json) => {\r\n      return json;\r\n    });\r\n  }\r\n\r\n  getAllGroupsOfAUser(): Promise<any> {\r\n    const restUrl = `${this.context.pageContext.web.absoluteUrl}/_api/web/currentuser/?$expand=groups`;\r\n    return this.get(restUrl)\r\n      .then((json) => {\r\n        return json.Groups;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getDepartmentsFromAD(Ou: string) {\r\n    let depdata = [];\r\n    return fetch(`${window.location.origin}:2023/adexplorer/getorgstr?ou=` + Ou)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        depdata = data;\r\n        return depdata;\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  getMyProperties() {\r\n    const url = `${this.webUrl}/_api/SP.UserProfiles.PeopleManager/GetMyProperties`;\r\n    return this.get(url, false).then((res) => {\r\n      return res;\r\n    });\r\n  }\r\n\r\n  getUserDepartmentFromAD(userName) {\r\n    return fetch(\r\n      `${window.location.origin}:2023/ADExplorer/getUserOU/?UserName=${userName}`\r\n    )\r\n      .then((data) => {\r\n        const depdata = data;\r\n        return depdata;\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  getUserSubDepartments(userName, siteName) {\r\n    return fetch(`${this.adWebUrl}/GetSubOU/?OU=${siteName}&Parent=${userName}`)\r\n      .then((data) => {\r\n        const depdata = data;\r\n        return depdata;\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  getPermissionIds() {\r\n    const restUrl = `${this.webUrl}/_api/web/lists/getByTitle('Permissions')/items?&$select=*&$orderby=Created%20desc`;\r\n    return this.get(restUrl)\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getUserRole(userID) {\r\n    const restUrl = `${this.webUrl}/_api/web/lists/getByTitle('UserRole')/items?&$select=*&$orderby=Created%20desc&$filter=UserId eq '${userID}'`;\r\n    return this.get(restUrl)\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getUserRoleResources(roleIds) {\r\n    const values = roleIds;\r\n    const filterConditions = values\r\n      .map((value) => `Role/Id eq '${value}'`)\r\n      .join(\" or \");\r\n\r\n    const restUrl = `${this.webUrl}/_api/web/lists/getByTitle('RoleResource')/items?&$select=*,Role/Id,PageResource/PageCode&$expand=Role,PageResource&$orderby=Created%20desc&$filter=${filterConditions}`;\r\n    return this.get(restUrl)\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getUserRolePermissions(roleresourceIds) {\r\n    const values = roleresourceIds;\r\n    const filterConditions = values\r\n      .map((value) => `RoleResourceId eq '${value}'`)\r\n      .join(\" or \");\r\n\r\n    const restUrl = `${this.webUrl}/_api/web/lists/getByTitle('RolePermission')/items?$top=200&$select=*,Permission/Id&$expand=Permission&$orderby=Created%20desc&$filter=${filterConditions}`;\r\n    return this.get(restUrl)\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getPageCodes() {\r\n    const restUrl = `${this.webUrl}/_api/web/lists/getByTitle('PageResource')/items?&$select=*&$orderby=Created%20desc`;\r\n    return this.get(restUrl)\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getParentSiteDetail(): Promise<any> {\r\n    const url = `${this.webUrl}/_api/site/RootWeb`;\r\n    return this.get(url)\r\n      .then((response: any) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        throw new Error(`error`);\r\n      });\r\n  }\r\n\r\n  getDepInfo = (depName: string): Promise<any> => {\r\n    const queryParams: any = {\r\n      queryParams: {\r\n        AllowEmailAddresses: true,\r\n        AllowMultipleEntities: false,\r\n        AllUrlZones: false,\r\n        MaximumEntitySuggestions: 5,\r\n        PrincipalSource: 15,\r\n        PrincipalType: 12,\r\n        QueryString: depName,\r\n      },\r\n    };\r\n    const url: string =\r\n      this.webUrl +\r\n      \"/_api/SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.clientPeoplePickerSearchUser\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n      body: queryParams,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        const resultKey = JSON.parse(result.value.value);\r\n\r\n        let ensuruserParam: any;\r\n        if (resultKey.length > 0) {\r\n          ensuruserParam = { logonName: resultKey[0].Key };\r\n        }\r\n\r\n        return this.getFinalDepInfo(ensuruserParam);\r\n      })\r\n      .catch((err) => {\r\n        throw new Error(err);\r\n      });\r\n  };\r\n\r\n  getFinalDepInfo(data: any) {\r\n    const url: string = this.webUrl + \"/_api/web/ensureuser\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n      body: data,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        throw new Error(err);\r\n      });\r\n  }\r\n\r\n  getUserDepartment(): Promise<any> {\r\n    const url = `${this.webUrl}/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='Department')?@v='${this.context.pageContext.user.loginName}'`;\r\n    return this.get(url)\r\n      .then((response: any) => {\r\n        return response.value;\r\n      })\r\n      .catch((err) => {\r\n        throw new Error(`error`);\r\n      });\r\n  }\r\n\r\n  createNotification(data): Promise<any> {\r\n    const url: string =\r\n      this.siteUrl +\r\n      \"/_api/web/lists/getByTitle('Notification_associated_task')/items\";\r\n    const options: ISPHttpClientOptions = {\r\n      headers: postHeader.headers,\r\n      body: data,\r\n    };\r\n    return this.post(url, options)\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}